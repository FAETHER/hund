/*
 * This file was generated by a script using these files:
 * http://www.unicode.org/Public/UCD/latest/ucd/EastAsianWidth.txt
 * http://www.unicode.org/Public/UCD/latest/ucd/UnicodeData.txt
 * These files belong to Unicode. You can find the license here:
 * http://www.unicode.org/copyright.html
 * or here:
 * http://www.unicode.org/terms_of_use.html
 */

#ifndef WIDECHARS_H
#define WIDECHARS_H

// A sorted list of ranges of Unicode codepoints of double-width characters
static const unsigned int double_width[][2] = {
	{0x1100, 0x115F},
	{0x231A, 0x231B},
	{0x2329, 0x2329},
	{0x232A, 0x232A},
	{0x23E9, 0x23EC},
	{0x23F0, 0x23F0},
	{0x23F3, 0x23F3},
	{0x25FD, 0x25FE},
	{0x2614, 0x2615},
	{0x2648, 0x2653},
	{0x267F, 0x267F},
	{0x2693, 0x2693},
	{0x26A1, 0x26A1},
	{0x26AA, 0x26AB},
	{0x26BD, 0x26BE},
	{0x26C4, 0x26C5},
	{0x26CE, 0x26CE},
	{0x26D4, 0x26D4},
	{0x26EA, 0x26EA},
	{0x26F2, 0x26F3},
	{0x26F5, 0x26F5},
	{0x26FA, 0x26FA},
	{0x26FD, 0x26FD},
	{0x2705, 0x2705},
	{0x270A, 0x270B},
	{0x2728, 0x2728},
	{0x274C, 0x274C},
	{0x274E, 0x274E},
	{0x2753, 0x2755},
	{0x2757, 0x2757},
	{0x2795, 0x2797},
	{0x27B0, 0x27B0},
	{0x27BF, 0x27BF},
	{0x2B1B, 0x2B1C},
	{0x2B50, 0x2B50},
	{0x2B55, 0x2B55},
	{0x2E80, 0x2E99},
	{0x2E9B, 0x2EF3},
	{0x2F00, 0x2FD5},
	{0x2FF0, 0x2FFB},
	{0x3000, 0x3000},
	{0x3001, 0x3003},
	{0x3004, 0x3004},
	{0x3005, 0x3005},
	{0x3006, 0x3006},
	{0x3007, 0x3007},
	{0x3008, 0x3008},
	{0x3009, 0x3009},
	{0x300A, 0x300A},
	{0x300B, 0x300B},
	{0x300C, 0x300C},
	{0x300D, 0x300D},
	{0x300E, 0x300E},
	{0x300F, 0x300F},
	{0x3010, 0x3010},
	{0x3011, 0x3011},
	{0x3012, 0x3013},
	{0x3014, 0x3014},
	{0x3015, 0x3015},
	{0x3016, 0x3016},
	{0x3017, 0x3017},
	{0x3018, 0x3018},
	{0x3019, 0x3019},
	{0x301A, 0x301A},
	{0x301B, 0x301B},
	{0x301C, 0x301C},
	{0x301D, 0x301D},
	{0x301E, 0x301F},
	{0x3020, 0x3020},
	{0x3021, 0x3029},
	{0x302A, 0x302D},
	{0x302E, 0x302F},
	{0x3030, 0x3030},
	{0x3031, 0x3035},
	{0x3036, 0x3037},
	{0x3038, 0x303A},
	{0x303B, 0x303B},
	{0x303C, 0x303C},
	{0x303D, 0x303D},
	{0x303E, 0x303E},
	{0x3041, 0x3096},
	{0x3099, 0x309A},
	{0x309B, 0x309C},
	{0x309D, 0x309E},
	{0x309F, 0x309F},
	{0x30A0, 0x30A0},
	{0x30A1, 0x30FA},
	{0x30FB, 0x30FB},
	{0x30FC, 0x30FE},
	{0x30FF, 0x30FF},
	{0x3105, 0x312E},
	{0x3131, 0x318E},
	{0x3190, 0x3191},
	{0x3192, 0x3195},
	{0x3196, 0x319F},
	{0x31A0, 0x31BA},
	{0x31C0, 0x31E3},
	{0x31F0, 0x31FF},
	{0x3200, 0x321E},
	{0x3220, 0x3229},
	{0x322A, 0x3247},
	{0x3250, 0x3250},
	{0x3251, 0x325F},
	{0x3260, 0x327F},
	{0x3280, 0x3289},
	{0x328A, 0x32B0},
	{0x32B1, 0x32BF},
	{0x32C0, 0x32FE},
	{0x3300, 0x33FF},
	{0x3400, 0x4DB5},
	{0x4DB6, 0x4DBF},
	{0x4E00, 0x9FEA},
	{0x9FEB, 0x9FFF},
	{0xA000, 0xA014},
	{0xA015, 0xA015},
	{0xA016, 0xA48C},
	{0xA490, 0xA4C6},
	{0xA960, 0xA97C},
	{0xAC00, 0xD7A3},
	{0xF900, 0xFA6D},
	{0xFA6E, 0xFA6F},
	{0xFA70, 0xFAD9},
	{0xFADA, 0xFAFF},
	{0xFE10, 0xFE16},
	{0xFE17, 0xFE17},
	{0xFE18, 0xFE18},
	{0xFE19, 0xFE19},
	{0xFE30, 0xFE30},
	{0xFE31, 0xFE32},
	{0xFE33, 0xFE34},
	{0xFE35, 0xFE35},
	{0xFE36, 0xFE36},
	{0xFE37, 0xFE37},
	{0xFE38, 0xFE38},
	{0xFE39, 0xFE39},
	{0xFE3A, 0xFE3A},
	{0xFE3B, 0xFE3B},
	{0xFE3C, 0xFE3C},
	{0xFE3D, 0xFE3D},
	{0xFE3E, 0xFE3E},
	{0xFE3F, 0xFE3F},
	{0xFE40, 0xFE40},
	{0xFE41, 0xFE41},
	{0xFE42, 0xFE42},
	{0xFE43, 0xFE43},
	{0xFE44, 0xFE44},
	{0xFE45, 0xFE46},
	{0xFE47, 0xFE47},
	{0xFE48, 0xFE48},
	{0xFE49, 0xFE4C},
	{0xFE4D, 0xFE4F},
	{0xFE50, 0xFE52},
	{0xFE54, 0xFE57},
	{0xFE58, 0xFE58},
	{0xFE59, 0xFE59},
	{0xFE5A, 0xFE5A},
	{0xFE5B, 0xFE5B},
	{0xFE5C, 0xFE5C},
	{0xFE5D, 0xFE5D},
	{0xFE5E, 0xFE5E},
	{0xFE5F, 0xFE61},
	{0xFE62, 0xFE62},
	{0xFE63, 0xFE63},
	{0xFE64, 0xFE66},
	{0xFE68, 0xFE68},
	{0xFE69, 0xFE69},
	{0xFE6A, 0xFE6B},
	{0xFF01, 0xFF03},
	{0xFF04, 0xFF04},
	{0xFF05, 0xFF07},
	{0xFF08, 0xFF08},
	{0xFF09, 0xFF09},
	{0xFF0A, 0xFF0A},
	{0xFF0B, 0xFF0B},
	{0xFF0C, 0xFF0C},
	{0xFF0D, 0xFF0D},
	{0xFF0E, 0xFF0F},
	{0xFF10, 0xFF19},
	{0xFF1A, 0xFF1B},
	{0xFF1C, 0xFF1E},
	{0xFF1F, 0xFF20},
	{0xFF21, 0xFF3A},
	{0xFF3B, 0xFF3B},
	{0xFF3C, 0xFF3C},
	{0xFF3D, 0xFF3D},
	{0xFF3E, 0xFF3E},
	{0xFF3F, 0xFF3F},
	{0xFF40, 0xFF40},
	{0xFF41, 0xFF5A},
	{0xFF5B, 0xFF5B},
	{0xFF5C, 0xFF5C},
	{0xFF5D, 0xFF5D},
	{0xFF5E, 0xFF5E},
	{0xFF5F, 0xFF5F},
	{0xFF60, 0xFF60},
	{0xFFE0, 0xFFE1},
	{0xFFE2, 0xFFE2},
	{0xFFE3, 0xFFE3},
	{0xFFE4, 0xFFE4},
	{0xFFE5, 0xFFE6},
	{0x16FE0, 0x16FE1},
	{0x17000, 0x187EC},
	{0x18800, 0x18AF2},
	{0x1B000, 0x1B0FF},
	{0x1B100, 0x1B11E},
	{0x1B170, 0x1B2FB},
	{0x1F004, 0x1F004},
	{0x1F0CF, 0x1F0CF},
	{0x1F18E, 0x1F18E},
	{0x1F191, 0x1F19A},
	{0x1F200, 0x1F202},
	{0x1F210, 0x1F23B},
	{0x1F240, 0x1F248},
	{0x1F250, 0x1F251},
	{0x1F260, 0x1F265},
	{0x1F300, 0x1F320},
	{0x1F32D, 0x1F335},
	{0x1F337, 0x1F37C},
	{0x1F37E, 0x1F393},
	{0x1F3A0, 0x1F3CA},
	{0x1F3CF, 0x1F3D3},
	{0x1F3E0, 0x1F3F0},
	{0x1F3F4, 0x1F3F4},
	{0x1F3F8, 0x1F3FA},
	{0x1F3FB, 0x1F3FF},
	{0x1F400, 0x1F43E},
	{0x1F440, 0x1F440},
	{0x1F442, 0x1F4FC},
	{0x1F4FF, 0x1F53D},
	{0x1F54B, 0x1F54E},
	{0x1F550, 0x1F567},
	{0x1F57A, 0x1F57A},
	{0x1F595, 0x1F596},
	{0x1F5A4, 0x1F5A4},
	{0x1F5FB, 0x1F5FF},
	{0x1F600, 0x1F64F},
	{0x1F680, 0x1F6C5},
	{0x1F6CC, 0x1F6CC},
	{0x1F6D0, 0x1F6D2},
	{0x1F6EB, 0x1F6EC},
	{0x1F6F4, 0x1F6F8},
	{0x1F910, 0x1F93E},
	{0x1F940, 0x1F94C},
	{0x1F950, 0x1F96B},
	{0x1F980, 0x1F997},
	{0x1F9C0, 0x1F9C0},
	{0x1F9D0, 0x1F9E6},
	{0x20000, 0x2A6D6},
	{0x2A6D7, 0x2A6FF},
	{0x2A700, 0x2B734},
	{0x2B735, 0x2B73F},
	{0x2B740, 0x2B81D},
	{0x2B81E, 0x2B81F},
	{0x2B820, 0x2CEA1},
	{0x2CEA2, 0x2CEAF},
	{0x2CEB0, 0x2EBE0},
	{0x2EBE1, 0x2F7FF},
	{0x2F800, 0x2FA1D},
	{0x2FA1E, 0x2FFFD},
	{0x30000, 0x3FFFD},
};
static const size_t double_width_len = sizeof(double_width)/sizeof(double_width[0]);

// A sorted list of ranges of Unicode codepoints of zero-width characters
static const unsigned int zero_width[][2] = {
	{0x000000, 0x000000},
	{0x0000AD, 0x0000AD},
	{0x000300, 0x00036F},
	{0x000483, 0x000489},
	{0x000591, 0x0005BD},
	{0x0005BF, 0x0005BF},
	{0x0005C1, 0x0005C2},
	{0x0005C4, 0x0005C5},
	{0x0005C7, 0x0005C7},
	{0x000600, 0x000605},
	{0x000610, 0x00061A},
	{0x00061C, 0x00061C},
	{0x00064B, 0x00065F},
	{0x000670, 0x000670},
	{0x0006D6, 0x0006DD},
	{0x0006DF, 0x0006E4},
	{0x0006E7, 0x0006E8},
	{0x0006EA, 0x0006ED},
	{0x00070F, 0x00070F},
	{0x000711, 0x000711},
	{0x000730, 0x00074A},
	{0x0007A6, 0x0007B0},
	{0x0007EB, 0x0007F3},
	{0x000816, 0x000819},
	{0x00081B, 0x000823},
	{0x000825, 0x000827},
	{0x000829, 0x00082D},
	{0x000859, 0x00085B},
	{0x0008D4, 0x000902},
	{0x00093A, 0x00093A},
	{0x00093C, 0x00093C},
	{0x000941, 0x000948},
	{0x00094D, 0x00094D},
	{0x000951, 0x000957},
	{0x000962, 0x000963},
	{0x000981, 0x000981},
	{0x0009BC, 0x0009BC},
	{0x0009C1, 0x0009C4},
	{0x0009CD, 0x0009CD},
	{0x0009E2, 0x0009E3},
	{0x000A01, 0x000A02},
	{0x000A3C, 0x000A3C},
	{0x000A41, 0x000A42},
	{0x000A47, 0x000A48},
	{0x000A4B, 0x000A4D},
	{0x000A51, 0x000A51},
	{0x000A70, 0x000A71},
	{0x000A75, 0x000A75},
	{0x000A81, 0x000A82},
	{0x000ABC, 0x000ABC},
	{0x000AC1, 0x000AC5},
	{0x000AC7, 0x000AC8},
	{0x000ACD, 0x000ACD},
	{0x000AE2, 0x000AE3},
	{0x000AFA, 0x000AFF},
	{0x000B01, 0x000B01},
	{0x000B3C, 0x000B3C},
	{0x000B3F, 0x000B3F},
	{0x000B41, 0x000B44},
	{0x000B4D, 0x000B4D},
	{0x000B56, 0x000B56},
	{0x000B62, 0x000B63},
	{0x000B82, 0x000B82},
	{0x000BC0, 0x000BC0},
	{0x000BCD, 0x000BCD},
	{0x000C00, 0x000C00},
	{0x000C3E, 0x000C40},
	{0x000C46, 0x000C48},
	{0x000C4A, 0x000C4D},
	{0x000C55, 0x000C56},
	{0x000C62, 0x000C63},
	{0x000C81, 0x000C81},
	{0x000CBC, 0x000CBC},
	{0x000CBF, 0x000CBF},
	{0x000CC6, 0x000CC6},
	{0x000CCC, 0x000CCD},
	{0x000CE2, 0x000CE3},
	{0x000D00, 0x000D01},
	{0x000D3B, 0x000D3C},
	{0x000D41, 0x000D44},
	{0x000D4D, 0x000D4D},
	{0x000D62, 0x000D63},
	{0x000DCA, 0x000DCA},
	{0x000DD2, 0x000DD4},
	{0x000DD6, 0x000DD6},
	{0x000E31, 0x000E31},
	{0x000E34, 0x000E3A},
	{0x000E47, 0x000E4E},
	{0x000EB1, 0x000EB1},
	{0x000EB4, 0x000EB9},
	{0x000EBB, 0x000EBC},
	{0x000EC8, 0x000ECD},
	{0x000F18, 0x000F19},
	{0x000F35, 0x000F35},
	{0x000F37, 0x000F37},
	{0x000F39, 0x000F39},
	{0x000F71, 0x000F7E},
	{0x000F80, 0x000F84},
	{0x000F86, 0x000F87},
	{0x000F8D, 0x000F97},
	{0x000F99, 0x000FBC},
	{0x000FC6, 0x000FC6},
	{0x00102D, 0x001030},
	{0x001032, 0x001037},
	{0x001039, 0x00103A},
	{0x00103D, 0x00103E},
	{0x001058, 0x001059},
	{0x00105E, 0x001060},
	{0x001071, 0x001074},
	{0x001082, 0x001082},
	{0x001085, 0x001086},
	{0x00108D, 0x00108D},
	{0x00109D, 0x00109D},
	{0x001160, 0x0011FF},
	{0x00135D, 0x00135F},
	{0x001712, 0x001714},
	{0x001732, 0x001734},
	{0x001752, 0x001753},
	{0x001772, 0x001773},
	{0x0017B4, 0x0017B5},
	{0x0017B7, 0x0017BD},
	{0x0017C6, 0x0017C6},
	{0x0017C9, 0x0017D3},
	{0x0017DD, 0x0017DD},
	{0x00180B, 0x00180E},
	{0x001885, 0x001886},
	{0x0018A9, 0x0018A9},
	{0x001920, 0x001922},
	{0x001927, 0x001928},
	{0x001932, 0x001932},
	{0x001939, 0x00193B},
	{0x001A17, 0x001A18},
	{0x001A1B, 0x001A1B},
	{0x001A56, 0x001A56},
	{0x001A58, 0x001A5E},
	{0x001A60, 0x001A60},
	{0x001A62, 0x001A62},
	{0x001A65, 0x001A6C},
	{0x001A73, 0x001A7C},
	{0x001A7F, 0x001A7F},
	{0x001AB0, 0x001ABE},
	{0x001B00, 0x001B03},
	{0x001B34, 0x001B34},
	{0x001B36, 0x001B3A},
	{0x001B3C, 0x001B3C},
	{0x001B42, 0x001B42},
	{0x001B6B, 0x001B73},
	{0x001B80, 0x001B81},
	{0x001BA2, 0x001BA5},
	{0x001BA8, 0x001BA9},
	{0x001BAB, 0x001BAD},
	{0x001BE6, 0x001BE6},
	{0x001BE8, 0x001BE9},
	{0x001BED, 0x001BED},
	{0x001BEF, 0x001BF1},
	{0x001C2C, 0x001C33},
	{0x001C36, 0x001C37},
	{0x001CD0, 0x001CD2},
	{0x001CD4, 0x001CE0},
	{0x001CE2, 0x001CE8},
	{0x001CED, 0x001CED},
	{0x001CF4, 0x001CF4},
	{0x001CF8, 0x001CF9},
	{0x001DC0, 0x001DF9},
	{0x001DFB, 0x001DFF},
	{0x00200B, 0x00200F},
	{0x00202A, 0x00202E},
	{0x002060, 0x002064},
	{0x002066, 0x00206F},
	{0x0020D0, 0x0020F0},
	{0x002CEF, 0x002CF1},
	{0x002D7F, 0x002D7F},
	{0x002DE0, 0x002DFF},
	{0x00302A, 0x00302D},
	{0x003099, 0x00309A},
	{0x00A66F, 0x00A672},
	{0x00A674, 0x00A67D},
	{0x00A69E, 0x00A69F},
	{0x00A6F0, 0x00A6F1},
	{0x00A802, 0x00A802},
	{0x00A806, 0x00A806},
	{0x00A80B, 0x00A80B},
	{0x00A825, 0x00A826},
	{0x00A8C4, 0x00A8C5},
	{0x00A8E0, 0x00A8F1},
	{0x00A926, 0x00A92D},
	{0x00A947, 0x00A951},
	{0x00A980, 0x00A982},
	{0x00A9B3, 0x00A9B3},
	{0x00A9B6, 0x00A9B9},
	{0x00A9BC, 0x00A9BC},
	{0x00A9E5, 0x00A9E5},
	{0x00AA29, 0x00AA2E},
	{0x00AA31, 0x00AA32},
	{0x00AA35, 0x00AA36},
	{0x00AA43, 0x00AA43},
	{0x00AA4C, 0x00AA4C},
	{0x00AA7C, 0x00AA7C},
	{0x00AAB0, 0x00AAB0},
	{0x00AAB2, 0x00AAB4},
	{0x00AAB7, 0x00AAB8},
	{0x00AABE, 0x00AABF},
	{0x00AAC1, 0x00AAC1},
	{0x00AAEC, 0x00AAED},
	{0x00AAF6, 0x00AAF6},
	{0x00ABE5, 0x00ABE5},
	{0x00ABE8, 0x00ABE8},
	{0x00ABED, 0x00ABED},
	{0x00D7B0, 0x00D7C6},
	{0x00D7CB, 0x00D7FB},
	{0x00FB1E, 0x00FB1E},
	{0x00FE00, 0x00FE0F},
	{0x00FE20, 0x00FE2F},
	{0x00FEFF, 0x00FEFF},
	{0x00FFF9, 0x00FFFB},
	{0x0101FD, 0x0101FD},
	{0x0102E0, 0x0102E0},
	{0x010376, 0x01037A},
	{0x010A01, 0x010A03},
	{0x010A05, 0x010A06},
	{0x010A0C, 0x010A0F},
	{0x010A38, 0x010A3A},
	{0x010A3F, 0x010A3F},
	{0x010AE5, 0x010AE6},
	{0x011001, 0x011001},
	{0x011038, 0x011046},
	{0x01107F, 0x011081},
	{0x0110B3, 0x0110B6},
	{0x0110B9, 0x0110BA},
	{0x0110BD, 0x0110BD},
	{0x011100, 0x011102},
	{0x011127, 0x01112B},
	{0x01112D, 0x011134},
	{0x011173, 0x011173},
	{0x011180, 0x011181},
	{0x0111B6, 0x0111BE},
	{0x0111CA, 0x0111CC},
	{0x01122F, 0x011231},
	{0x011234, 0x011234},
	{0x011236, 0x011237},
	{0x01123E, 0x01123E},
	{0x0112DF, 0x0112DF},
	{0x0112E3, 0x0112EA},
	{0x011300, 0x011301},
	{0x01133C, 0x01133C},
	{0x011340, 0x011340},
	{0x011366, 0x01136C},
	{0x011370, 0x011374},
	{0x011438, 0x01143F},
	{0x011442, 0x011444},
	{0x011446, 0x011446},
	{0x0114B3, 0x0114B8},
	{0x0114BA, 0x0114BA},
	{0x0114BF, 0x0114C0},
	{0x0114C2, 0x0114C3},
	{0x0115B2, 0x0115B5},
	{0x0115BC, 0x0115BD},
	{0x0115BF, 0x0115C0},
	{0x0115DC, 0x0115DD},
	{0x011633, 0x01163A},
	{0x01163D, 0x01163D},
	{0x01163F, 0x011640},
	{0x0116AB, 0x0116AB},
	{0x0116AD, 0x0116AD},
	{0x0116B0, 0x0116B5},
	{0x0116B7, 0x0116B7},
	{0x01171D, 0x01171F},
	{0x011722, 0x011725},
	{0x011727, 0x01172B},
	{0x011A01, 0x011A06},
	{0x011A09, 0x011A0A},
	{0x011A33, 0x011A38},
	{0x011A3B, 0x011A3E},
	{0x011A47, 0x011A47},
	{0x011A51, 0x011A56},
	{0x011A59, 0x011A5B},
	{0x011A8A, 0x011A96},
	{0x011A98, 0x011A99},
	{0x011C30, 0x011C36},
	{0x011C38, 0x011C3D},
	{0x011C3F, 0x011C3F},
	{0x011C92, 0x011CA7},
	{0x011CAA, 0x011CB0},
	{0x011CB2, 0x011CB3},
	{0x011CB5, 0x011CB6},
	{0x011D31, 0x011D36},
	{0x011D3A, 0x011D3A},
	{0x011D3C, 0x011D3D},
	{0x011D3F, 0x011D45},
	{0x011D47, 0x011D47},
	{0x016AF0, 0x016AF4},
	{0x016B30, 0x016B36},
	{0x016F8F, 0x016F92},
	{0x01BC9D, 0x01BC9E},
	{0x01BCA0, 0x01BCA3},
	{0x01D167, 0x01D169},
	{0x01D173, 0x01D182},
	{0x01D185, 0x01D18B},
	{0x01D1AA, 0x01D1AD},
	{0x01D242, 0x01D244},
	{0x01DA00, 0x01DA36},
	{0x01DA3B, 0x01DA6C},
	{0x01DA75, 0x01DA75},
	{0x01DA84, 0x01DA84},
	{0x01DA9B, 0x01DA9F},
	{0x01DAA1, 0x01DAAF},
	{0x01E000, 0x01E006},
	{0x01E008, 0x01E018},
	{0x01E01B, 0x01E021},
	{0x01E023, 0x01E024},
	{0x01E026, 0x01E02A},
	{0x01E8D0, 0x01E8D6},
	{0x01E944, 0x01E94A},
	{0x0E0001, 0x0E0001},
	{0x0E0020, 0x0E007F},
};
static const size_t zero_width_len = sizeof(zero_width)/sizeof(zero_width[0]);

#endif
